<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<#
	var cursorPairMethods = new []
	{
        "MoveToFirst",
        "MoveToLast",        
        "GetCurrent",
        "MoveNext",
        "MoveNextDuplicate",
        "MoveNextNoDuplicate",
        "MovePrev",
        "MovePrevDuplicate",
        "MovePrevNoDuplicate"
	};
    
    var cursorValueMethods = new []
    {
        "MoveToFirstDuplicate",
        "MoveToLastDuplicate"
    };
#>
using System;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using LightningDB.Native;

namespace LightningDB
{
    public static class LightningCursorMoveExtensions
    {
        <#
            foreach(var name in cursorPairMethods)
            {
        #>

        public static CursorGetByOperation <#= name #>By(this LightningCursor cur)
        {
            return cur.CursorMoveBy(cur.<#= name #>);
        }

        public static bool <#= name #><TKey, TValue>(this LightningCursor cur, out KeyValuePair<TKey, TValue> pair)
        {
            return cur.CursorMove<TKey, TValue>(cur.<#= name #>, out pair);
        }
        <#
            }
        #>
        <#
            foreach(var name in cursorValueMethods)
            {
        #>

        public static GetByOperation <#= name #>By(this LightningCursor cur)
        {
            return cur.CursorMoveValueBy(cur.<#= name #>);
        }

        public static bool <#= name #><TValue>(this LightningCursor cur, out TValue value)
        {
            return cur.CursorMoveValue<TValue>(cur.<#= name #>, out value);
        }
        <#
            }
        #>
    
    }
}
